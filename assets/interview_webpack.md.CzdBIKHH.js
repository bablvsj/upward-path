import{_ as e,c as t,o as a,a5 as r}from"./chunks/framework.Drr5GMcH.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/webpack.md","filePath":"interview/webpack.md","lastUpdated":1721316536000}'),i={name:"interview/webpack.md"},l=r('<h2 id="原理初探" tabindex="-1">原理初探 <a class="header-anchor" href="#原理初探" aria-label="Permalink to &quot;原理初探&quot;">​</a></h2><p>：<a href="https://juejin.cn/post/6943468761575849992" title="https://juejin.cn/post/6943468761575849992" target="_blank" rel="noreferrer">当面试官问 Webpack 的时候他想知道什么</a></p><h2 id="简易实现" tabindex="-1">简易实现 <a class="header-anchor" href="#简易实现" aria-label="Permalink to &quot;简易实现&quot;">​</a></h2><p>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FCosen95%2Fblog%2Fissues%2F48" title="https://github.com/Cosen95/blog/issues/48" target="_blank" rel="noreferrer">面试官：webpack 原理都不会</a>，<a href="https://link.juejin.cn?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000039231950" title="https://segmentfault.com/a/1190000039231950" target="_blank" rel="noreferrer">手写一个 webpack，看看 AST 怎么用</a></p><h2 id="加料" tabindex="-1">加料 <a class="header-anchor" href="#加料" aria-label="Permalink to &quot;加料&quot;">​</a></h2><p>：<a href="https://juejin.cn/post/6844903520378814471" title="https://juejin.cn/post/6844903520378814471" target="_blank" rel="noreferrer">简单易懂的 webpack 打包后 JS 的运行过程</a>，<a href="https://juejin.cn/post/6888936770692448270" title="https://juejin.cn/post/6888936770692448270" target="_blank" rel="noreferrer">Webpack 手写 loader 和 plugin</a></p><h2 id="热更新原理" tabindex="-1">热更新原理 <a class="header-anchor" href="#热更新原理" aria-label="Permalink to &quot;热更新原理&quot;">​</a></h2><p>：<a href="https://link.juejin.cn?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F30669007" title="https://zhuanlan.zhihu.com/p/30669007" target="_blank" rel="noreferrer">Webpack HMR 原理解析</a></p><h2 id="面试题" tabindex="-1">面试题 <a class="header-anchor" href="#面试题" aria-label="Permalink to &quot;面试题&quot;">​</a></h2><p>：<a href="https://juejin.cn/post/6844904094281236487" title="https://juejin.cn/post/6844904094281236487" target="_blank" rel="noreferrer">「吐血整理」再来一打 Webpack 面试题</a></p><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>代码层面：</p><ul><li>防抖和节流（resize，scroll，input）。</li><li>减少回流（重排）和重绘。</li><li>事件委托。</li><li>css 放 ，js 脚本放 最底部。</li><li>减少 DOM 操作。</li><li>按需加载，比如 React 中使用 <code>React.lazy</code> 和 <code>React.Suspense</code> ，通常需要与 webpack 中的 <code>splitChunks</code> 配合。</li></ul><p>构建方面：</p><ul><li><strong>压缩代码文件</strong>，在 webpack 中使用 <code>terser-webpack-plugin</code> 压缩 Javascript 代码；使用 <code>css-minimizer-webpack-plugin</code> 压缩 CSS 代码；使用 <code>html-webpack-plugin</code> 压缩 html 代码。</li><li><strong>开启 gzip 压缩</strong>，webpack 中使用 <code>compression-webpack-plugin</code> ，node 作为服务器也要开启，使用 <code>compression</code>。</li><li><strong>常用的第三方库使用 CDN 服务</strong>，在 webpack 中我们要配置 externals，将比如 React， Vue 这种包不打倒最终生成的文件中。而是采用 CDN 服务。</li></ul><p>其它：</p><ul><li>使用 http2。因为解析速度快，头部压缩，多路复用，服务器推送静态资源。</li><li>使用服务端渲染。</li><li>图片压缩。</li><li>使用 http 缓存，比如服务端的响应中添加 <code>Cache-Control / Expires</code> 。</li></ul><p>作者：vortesnail<br> 链接：<a href="https://juejin.cn/post/7061588533214969892" target="_blank" rel="noreferrer">https://juejin.cn/post/7061588533214969892</a><br> 来源：稀土掘金<br> 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>',18),n=[l];function o(s,c,p,h,u,d){return a(),t("div",null,n)}const _=e(i,[["render",o]]);export{k as __pageData,_ as default};
