import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.BY5D-gxZ.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/harmony/code.md","filePath":"front/harmony/code.md","lastUpdated":1723110915000}'),t={name:"front/harmony/code.md"},l=n(`<h3 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-label="Permalink to &quot;装饰器&quot;">​</a></h3><p>@State: 标记该变量是状态变量，值变化时会触发UI刷新</p><h4 id="组件封装" tabindex="-1">组件封装 <a class="header-anchor" href="#组件封装" aria-label="Permalink to &quot;组件封装&quot;">​</a></h4><ul><li>自定义组件</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct MyComponent{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	private title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 引用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		MyComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>自定义构建函数</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Builder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XxxBuildr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	@Builder </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">YyyBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// ...内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		XxxBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全局自定义构建函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">YyyBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 局部自定义构建函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>@Styles 装饰器，仅可封装通用属性</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Styles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FillScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct XxxPage {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	@Styles </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalBackground</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backgroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#eff&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//... </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FillScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全局公共样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalBackground</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 组件内公共样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>@Extend装饰器，仅可定义在全局，可以设置组件特有属性</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Text) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> priceText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fontColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#f36&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fontSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="状态管理" tabindex="-1">状态管理 <a class="header-anchor" href="#状态管理" aria-label="Permalink to &quot;状态管理&quot;">​</a></h3><h4 id="state-状态变量-可以触发视图更新" tabindex="-1">@State 状态变量，可以触发视图更新 <a class="header-anchor" href="#state-状态变量-可以触发视图更新" aria-label="Permalink to &quot;@State 状态变量，可以触发视图更新&quot;">​</a></h4><p>普通变量是无法去触发视图程序渲染更新的。</p><blockquote><ul><li>@State装饰器标记的变量必须初始化，不能为空值</li><li>@State 支持 Object、class、string、number、boolean、enum 类型以及这些类型的数组</li><li>嵌套类型以及数组中的对象属性无法触发视图更新</li></ul></blockquote><h4 id="prop-和-link-父子组件双向同步通信" tabindex="-1">@Prop 和 @Link 父子组件双向同步通信 <a class="header-anchor" href="#prop-和-link-父子组件双向同步通信" aria-label="Permalink to &quot;@Prop 和 @Link  父子组件双向同步通信&quot;">​</a></h4><table tabindex="0"><thead><tr><th></th><th>@Prop</th><th>@Link</th></tr></thead><tbody><tr><td>同步类型</td><td>单向同步</td><td>双向同步</td></tr><tr><td>允许装饰的变量类型</td><td>- @Prop只支持string、number、boolean、enum类型<br>- 父组件对象类型，子组件是对象属性<br>- 不可以是数组、any</td><td>- 父子类型需一致：string、number、boolean、enum、object、class、array<br>- 数组中元素增删改会引起刷新<br>- 嵌套类型以及<strong>数组中的对象属性无法触发视图更新</strong></td></tr><tr><td>初始化方式</td><td>不允许子组件初始化</td><td>父组件传递，禁止子组件初始化</td></tr></tbody></table><h4 id="provide-和-consume-跨组件双向同步通信" tabindex="-1">@Provide 和 @Consume 跨组件双向同步通信 <a class="header-anchor" href="#provide-和-consume-跨组件双向同步通信" aria-label="Permalink to &quot;@Provide 和 @Consume  跨组件双向同步通信&quot;">​</a></h4><h4 id="observed-和-objectlink-嵌套对象或数组元素为对象的场景进行双向同步通信" tabindex="-1">@Observed 和 @ObjectLink 嵌套对象或数组元素为对象的场景进行双向同步通信 <a class="header-anchor" href="#observed-和-objectlink-嵌套对象或数组元素为对象的场景进行双向同步通信" aria-label="Permalink to &quot;@Observed 和 @ObjectLink  嵌套对象或数组元素为对象的场景进行双向同步通信&quot;">​</a></h4><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p><a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-prop-V5#%E7%88%B6%E7%BB%84%E4%BB%B6state%E5%88%B0%E5%AD%90%E7%BB%84%E4%BB%B6prop%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%90%8C%E6%AD%A5" target="_blank" rel="noreferrer">@State+@Prop</a>、<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-link-V5#%E7%AE%80%E5%8D%95%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E7%9A%84link" target="_blank" rel="noreferrer">@State+@Link</a>、<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-observed-and-objectlink-V5" target="_blank" rel="noreferrer">@State+@Observed+@ObjectLink</a>、<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-provide-and-consume-V5" target="_blank" rel="noreferrer">@Provide+@Consume</a>、<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-appstorage-V5" target="_blank" rel="noreferrer">AppStorage</a>、<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-localstorage-V5" target="_blank" rel="noreferrer">LocalStorage</a>六种装饰器组合以解决不同范围内的组件间状态共享。按照共享范围能力从小到大，各装饰器组合的共享范围能力和生命周期如下：</p><ol><li>@State+@Prop、@State+@Link、@State+@Observed+@ObjectLink：三者的共享范围为从@State所在的组件开始，到@Prop/@Link/ObjectLink所在组件的整条路径，路径上所有的中间组件通过@Prop/@Link/@ObjectLink都可以共享同一个状态。@State修饰的状态和其所属的自定义组件共享生命周期，在组件内定义时创建，组件销毁时被回收。@Link装饰的变量和其所属的自定义组件共享生命周期。@ObjectLink装饰的变量和其所属的自定义组件共享生命周期。</li><li>@Provide+@Consume：状态共享范围是以@Provide所在组件为祖先节点的整棵子树，子树上的任意后代组件通过@Consume都可以共享同一个状态。@Provide修饰的变量与其所属的组件绑定，在组件内定义时被创建，在组件销毁时被回收。</li><li>LocalStorage：共享范围为<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/uiability-overview-V5" target="_blank" rel="noreferrer">UIAbility</a>内以页面为单位的不同组件树间的共享。存储在LocalStorage中的状态的生命周期与LocalStorage绑定。LocalStorage的声明周期由应用程序决定，当应用释放最后一个指向LocalStorage的引用时，LocalStorage被垃圾回收。</li><li>AppStorage：共享范围是应用全局。AppStorage与应用的进程绑定，由UI框架在应用程序启动时创建，当应用进程终止，AppStorage被回收。存储在AppStorage中的状态的生命周期与LocalStorage绑定。</li></ol><p>实际开发中，合理选择装饰器主要包含以下三步：</p><blockquote><p>1.首先根据状态需要共享的范围大小，尽量选择共享能力小的装饰器方案，优先级依次为@State+@Prop、@State+@Link或@State+@Observed+@ObjectLink &gt; @Provide+@Consume &gt; LocalStorage &gt; AppStorage。</p></blockquote><blockquote><p>2.当共享的状态的组件间层级相差较大时，为避免较差的代码可扩展性和可维护性，@Provide+@Consume的方案要优于层层传递的共享方案。</p></blockquote><blockquote><p>3.对于具有相同优先级的@State+@Prop、@State+@Link或@State+@Observed+@ObjectLink 三个方案，应结合状态的复杂程度和装饰器各自的特性选择。</p></blockquote><p>实际开发中，应根据业务需求衡量优先级选择合适的装饰器，整体可参考如下建议：</p><ol><li>@State+@Prop：适合状态结构简单，且共享状态的组件间层级相差不大的场景。或功能上要求子组件不实时同步修改给父组件的场景。</li><li>@State+@Link：适合状态结构复杂，且共享状态的组件间层级相差不大的场景。或功能上要求子组件对状态的修改实时同步给父组件的场景。</li><li>@State+@Observed+@ObjectLink：适合需要观察嵌套类对象的子属性变化的场景或对象数组的数据项属性变化的场景，如监听列表卡片上某个属性的变化。</li><li>@Provide+@Consume：适合用于对于整个组件树而言“全局”的状态，且该状态改动不频繁的状态共享场景，如共享界面的路由信息。</li><li>AppStorage：适合对于整个应用而言“全局”的变量或应用的<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/thread-model-stage-V5" target="_blank" rel="noreferrer">主线程</a>内多个UIAbility实例间的状态共享，如用户信息。</li><li>LocalStorage：适合对于单个Ability而言“全局”的变量，主要用于不同页面间的状态共享场景。</li></ol><h3 id="页面路由" tabindex="-1">页面路由 <a class="header-anchor" href="#页面路由" aria-label="Permalink to &quot;页面路由&quot;">​</a></h3><p>页面栈最大容量上限为32个页面，使用 router.clear() 清空页面栈</p><p>页面跳转模式：</p><p>router.pushUrl 压入页面栈，目标页不会替换当前页 router.replaceUrl 替换当前页</p><p>页面实例模式</p><p>Standard 标准实例模式（默认模式），每次跳转都会新建一个目标页并压入栈顶。 Single 单实例模式，如果目标页已在栈中，则离栈顶最近的同url页面会被移动到栈顶并重新加载。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { router } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.ArkUI&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导入模块</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;跳转页面&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 跳转配置参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pushUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	      url:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/TempTaskDetail&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	      params:{id:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,taskName:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;仍无1111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      router.RouterMode.Single,  </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">      err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err){          </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;跳转路由失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          //  - 100001:内部错误，可能是渲染失败</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          //  - 100002:路由地址错误</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          //  - 100003:路由栈中页面超过32</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	)  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">back</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回上一页</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">back</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	url:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/Index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	params:{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取router参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="消息通知" tabindex="-1">消息通知 <a class="header-anchor" href="#消息通知" aria-label="Permalink to &quot;消息通知&quot;">​</a></h3><ul><li><p>WantAgent的使用更多API可以参考：<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-app-ability-wantagent-V5" target="_blank" rel="noreferrer">WantAgent模块</a>。</p></li><li><p>关于通知模块更多API的使用可以参考：<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-notificationmanager-V5" target="_blank" rel="noreferrer">NotificationManager模块</a>。</p></li><li><p>显示接收到的短消息、即时消息等。</p></li><li><p>显示应用的推送消息，如广告、版本更新等。</p></li><li><p>显示当前正在进行的事件，如下载等。</p></li></ul><p>通知表现形式：通知栏、锁屏通知、横幅通知、桌面图标角标、通知图标</p><h4 id="通知结构" tabindex="-1">通知结构 <a class="header-anchor" href="#通知结构" aria-label="Permalink to &quot;通知结构&quot;">​</a></h4><ol><li>通知小图标：表示通知的功能与类型。</li><li>通知名称：应用名称或功能名称。</li><li>时间：发送通知的时间，系统默认显示。</li><li>展开箭头：点击标题区，展开被折叠的内容和按钮。若无折叠的内容和按钮，不显示此箭头。</li><li>内容标题：描述简明概要。</li><li>内容详情：描述具体内容或详情。</li></ol><h4 id="创建通知" tabindex="-1">创建通知 <a class="header-anchor" href="#创建通知" aria-label="Permalink to &quot;创建通知&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1. 导入notificationManager模块，该模块提供通知管理的能力</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { notificationManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.NotificationKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h5 id="发布基础类型通知" tabindex="-1">发布基础类型通知 <a class="header-anchor" href="#发布基础类型通知" aria-label="Permalink to &quot;发布基础类型通知&quot;">​</a></h5><p>基础类型通知主要应用于发送短信息、提示信息、广告推送等，支持普通文本类型、长文本类型、多行文本类型，可以通过ContentType指定通知的内容类型。</p><ul><li>发布普通文本类型通知，需要设置ContentType类型为ContentType.NOTIFICATION_CONTENT_BASIC_TEXT。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct NotificationDemo { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  publishNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> notificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 描述通知的请求 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通知ID  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      content: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通知内容 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        notificationContentType: notificationManager.ContentType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NOTIFICATION_CONTENT_BASIC_TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 普通文本类型通知 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        normal: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 基本类型通知内容 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;通知内容标题&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;通知内容详情&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    notificationManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(notificationRequest).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发布通知 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;publish success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`publish failed,message is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;发送通知&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publishNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="发布进度类型通知" tabindex="-1">发布进度类型通知 <a class="header-anchor" href="#发布进度类型通知" aria-label="Permalink to &quot;发布进度类型通知&quot;">​</a></h5><p>进度条通知也是常见的通知类型，主要应用于文件下载、事务处理进度显示。目前系统模板仅支持进度条模板，效果示意如下图所示</p><p>在发布进度类型通知前需要查询系统是否支持进度条模板。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notificationManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isSupportTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;downloadTemplate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isSupport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isSupport) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    promptAction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      message: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.string.invalid_button_toast&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.isSupport </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isSupport;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>构造进度条模板，name字段当前需要固定配置为downloadTemplate。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationTemplate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;downloadTemplate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    progressValue: progress, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前进度值 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    progressMaxValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 最大进度值 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> notificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    notificationContentType: notificationManager.ContentType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NOTIFICATION_CONTENT_BASIC_TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    normal: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文件下载：music.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;senTemplate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      additionalText: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;60%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   template: template   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发布通知 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notificationManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(notificationRequest).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`publish success\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`publish failed,message is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h5 id="更新通知" tabindex="-1">更新通知 <a class="header-anchor" href="#更新通知" aria-label="Permalink to &quot;更新通知&quot;">​</a></h5><p>在发出通知后，使用您之前使用的相同通知ID，再次调用notificationManager.publish来实现通知的更新。如果之前的通知是关闭的，将会创建新通知。</p><h5 id="移除通知" tabindex="-1">移除通知 <a class="header-anchor" href="#移除通知" aria-label="Permalink to &quot;移除通知&quot;">​</a></h5><ul><li><p>通过通知ID和通知标签取消已发布的通知。</p><p>notificationManager.cancel(notificationId)</p></li><li><p>取消所有已发布的通知。</p><p>notificationManager.cancelAll()</p></li></ul><h4 id="设置通知通道" tabindex="-1">设置通知通道 <a class="header-anchor" href="#设置通知通道" aria-label="Permalink to &quot;设置通知通道&quot;">​</a></h4><p>通过通知通道，您可让通知有不同的表现形式，比如社交类型的通知是横幅显示的，并且有提示音，而一般的通知则不会横幅显示，您可以使用slotType来实现，设置slotType为SlotType.SOCIAL_COMMUNICATION，表示为社交类型通知。示例代码如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notificationManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addSlot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(notificationManager.SlotType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SOCIAL_COMMUNICATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;addSlot success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BusinessError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`addSlot fail: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>通知通道类型主要有以下几种：</p><ul><li>SlotType.SOCIAL_COMMUNICATION：<strong>社交类型</strong>，状态栏中显示通知图标，有横幅和提示音。</li><li>SlotType.SERVICE_INFORMATION：<strong>服务类型</strong>，状态栏中显示通知图标，没有横幅但有提示音。</li><li>SlotType.CONTENT_INFORMATION：<strong>内容类型</strong>，状态栏中显示通知图标，但没有横幅或提示音。</li><li>SlotType.OTHER_TYPES：<strong>其它类型</strong>，状态栏中不显示通知图标，且没有横幅或提示音。</li></ul><h4 id="创建通知组" tabindex="-1">创建通知组 <a class="header-anchor" href="#创建通知组" aria-label="Permalink to &quot;创建通知组&quot;">​</a></h4><p>将不同类型的通知分为不同的组，以便用户可以更好的管理他们。当同组的通知有多条的时候，会自动折叠起来，避免通知比较多的时候，通知界面比较杂乱，例如当通知栏里有聊天消息通知和商品推荐通知时，我们只需要通过设置字段groupName，就可以对通知进行分组，给groupName设置不同的值可以将通知分为不同的组。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> notifyId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chatRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: notifyId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  groupName:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ChatGroup&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //... </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> productRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: notifyId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  groupName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ProductGroup&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: { </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //... </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span></code></pre></div><h4 id="为通知添加行为意图" tabindex="-1">为通知添加行为意图 <a class="header-anchor" href="#为通知添加行为意图" aria-label="Permalink to &quot;为通知添加行为意图&quot;">​</a></h4><p>WantAgent提供了封装行为意图的能力，这里所说的行为意图主要是指拉起指定的应用组件及发布公共事件等能力。给通知添加行为意图后，点击通知后可以拉起指定的UIAbility或者发布公共事件，您可以按照以下步骤来实现：</p><ul><li>导入模块</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { notificationManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.NotificationKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { wantAgent, WantAgent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.AbilityKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>创建WantAgentInfo信息。 场景一：拉起UIAbility。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wantAgentInfo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wants: [ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      bundleName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example.notification&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      abilityName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EntryAbility&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ], </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operationType: wantAgent.OperationType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">START_ABILITY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  requestCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><pre><code>场景二：发布公共事件。
</code></pre><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wantAgentInfo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wants: [ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;event_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置事件名 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      parameters: {}, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ], </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operationType: wantAgent.OperationType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEND_COMMON_EVENT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  requestCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wantAgentFlags: [wantAgent.WantAgentFlags.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONSTANT_FLAG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>创建WantAgent对象。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wantAgentObj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wantAgent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getWantAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wantAgentInfo) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wantAgentObj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`get wantAgent failed because \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span></code></pre></div><ul><li>构造NotificationRequest对象。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> notificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> notificationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NotificationRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  content: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    notificationContentType: notificationManager.ContentType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NOTIFICATION_CONTENT_BASIC_TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    normal: { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;通知标题&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;通知内容&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  wantAgent: wantAgentObj </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><ul><li>发布WantAgent通知。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notificationManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(notificationRequest).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发布通知</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;publish success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`publish failed, code is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}, message is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>用户通过点击通知栏上的通知，即可触发WantAgent的动作。</p><h3 id="后台代理提醒" tabindex="-1">后台代理提醒 <a class="header-anchor" href="#后台代理提醒" aria-label="Permalink to &quot;后台代理提醒&quot;">​</a></h3><p>后台代理提醒业务类型：</p><ul><li>倒计时类：基于倒计时的提醒功能，适用于短时的计时提醒业务。</li><li>日历类：基于日历的提醒功能，适用于较长时间的提醒业务。</li><li>闹钟类：基于时钟的提醒功能，适用于指定时刻的提醒业务。</li></ul><p>在整个流程中，应用仅需：</p><ol><li>使用reminderAgentManager模块的ReminderRequest类定义提醒实例；</li><li>使用reminderAgentManager模块的publishReminder接口发布提醒。</li></ol><p>若是删除提醒流程，需要使用reminderAgentManager模块的cancelReminder接口取消提醒； 若是修改提醒流程，则需要先删除旧的提醒，再新增新的提醒。</p><p>以闹钟应用为例，实现提醒功能有以下前置条件：</p><ul><li>添加后台代理提醒使用权限。</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;requestPermissions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ohos.permission.PUBLISH_AGENT_REMINDER&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>导入后台代理提醒reminderAgentManager模块，将此模块命名为reminderAgentManager。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { reminderAgentManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.BackgroundTasksKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="新增提醒" tabindex="-1"><strong>新增提醒</strong> <a class="header-anchor" href="#新增提醒" aria-label="Permalink to &quot;**新增提醒**&quot;">​</a></h4><p>实现步骤如下：</p><ol><li>用reminderAgent.ReminderRequest类定义提醒实例。</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { reminderAgentManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.BackgroundTasksKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">alarmItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reminderId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reminder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reminderAgentManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publishReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reminder, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reminderId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (callback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reminderId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reminderAgentManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReminderRequestAlarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      reminderType: item.remindType,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      hour: item.hour,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      minute: item.minute,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      daysOfWeek: item.repeatDays,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: item.name,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ringDuration: item.duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CommonConstants.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEFAULT_TOTAL_MINUTE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      snoozeTimes: item.intervalTimes,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      timeInterval: item.intervalMinute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CommonConstants.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEFAULT_TOTAL_MINUTE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      actionButton: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;关闭&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          type: reminderAgentManager.ActionButtonType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ACTION_BUTTON_TYPE_CLOSE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      wantAgent: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pkgName: CommonConstants.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BUNDLE_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        abilityName: CommonConstants.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ABILITY_NAME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      notificationId: item.notificationId,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li>发布提醒。</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { reminderAgentManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.BackgroundTasksKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">alarmItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reminderId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reminder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reminderAgentManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">publishReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reminder, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reminderId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (callback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reminderId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reminderAgentManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReminderRequestAlarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="删除提醒" tabindex="-1"><strong>删除提醒</strong> <a class="header-anchor" href="#删除提醒" aria-label="Permalink to &quot;**删除提醒**&quot;">​</a></h4><p>可以调用cancelReminder()接口实现。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { reminderAgentManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.BackgroundTasksKit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReminderService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deleteReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reminderId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reminderAgentManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cancelReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(reminderId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="修改提醒" tabindex="-1"><strong>修改提醒</strong> <a class="header-anchor" href="#修改提醒" aria-label="Permalink to &quot;**修改提醒**&quot;">​</a></h4><p>需要先进行旧提醒的删除，再新增新的提醒。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">public async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAlarmRemind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem: AlarmItem) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findAlarmWithId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem.id);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CommonConstants.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEFAULT_NUMBER_NEGATIVE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.reminderService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem.id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.reminderService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addReminder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alarmItem, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alarmItem.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newId;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/agent-powered-reminder-V5" target="_blank" rel="noreferrer">后台代理提醒</a></li><li><a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V5/js-apis-reminderagentmanager-V5" target="_blank" rel="noreferrer">reminderAgentManager (后台代理提醒)</a></li></ul><h3 id="三方库引入" tabindex="-1">三方库引入 <a class="header-anchor" href="#三方库引入" aria-label="Permalink to &quot;三方库引入&quot;">​</a></h3><p>通过 ohpm 工具</p><ul><li>三方库资源汇总：<a href="https://gitee.com/openharmony-tpc/tpc_resource" target="_blank" rel="noreferrer">https://gitee.com/openharmony-tpc/tpc_resource</a></li><li>OpenHarmony三方库中心仓：<a href="https://ohpm.openharmony.cn/" target="_blank" rel="noreferrer">https://ohpm.openharmony.cn</a></li><li>@ohos/lottie的使用：<a href="https://gitee.com/openharmony-tpc/lottieETS" target="_blank" rel="noreferrer">https://gitee.com/openharmony-tpc/lottieETS</a></li></ul><h3 id="harmonyos-sdk开放能力简介" tabindex="-1">HarmonyOS SDK开放能力简介 <a class="header-anchor" href="#harmonyos-sdk开放能力简介" aria-label="Permalink to &quot;HarmonyOS SDK开放能力简介&quot;">​</a></h3><p>HarmonyOS应用是能够在HarmonyOS设备（例如，手机、平板等）上运行的应用程序，支持两种形态：</p><ul><li>需要下载安装的应用</li><li>轻量级，具备免安装，即用即走，服务直达，自由流转等关键特征的元服务</li></ul><p>当前HarmonyOS SDK开放能力包括以下两大类：</p><ul><li>端侧能力开放：开放能力通过SDK方式呈现，应用通过集成SDK的方式进行集成</li><li>云侧能力开放：通过服务器开放接口（如： RESTful接口）给应用进行集成</li></ul><h4 id="应用框架-高效开发-助力构建高端精致、稳定流畅的harmonyos应用" tabindex="-1">应用框架：高效开发，助力构建高端精致、稳定流畅的HarmonyOS应用 <a class="header-anchor" href="#应用框架-高效开发-助力构建高端精致、稳定流畅的harmonyos应用" aria-label="Permalink to &quot;应用框架：高效开发，助力构建高端精致、稳定流畅的HarmonyOS应用&quot;">​</a></h4><p>应用框架作为HarmonyOS应用开发的基石，提供了易用的原生UI框架、强大的分布式能力、以及高效的编程语言，让开发者轻松打造出精美、流畅的HarmonyOS应用。</p><ol><li>提供了丰富的HarmonyOS UI组件，通过智能的布局和交互，一次开发，多设备适配，极大提升开发效率，并通过立体的光影、模糊和动效，助力开发者打造高端精致的HarmonyOS应用。</li><li>提供统一的数据语言和跨设备同步，提供分布式能力，场景化的服务扩展和数据绑定，共享库的代码复用，简化开发过程和提高代码质量。</li><li>提供高效的编程语言，低开销、精细的后台管理，统一渲染和调度，打造稳定流畅的应用。</li></ol><h4 id="应用服务-使能应用提供便捷用户体验-助力经营和商业闭环" tabindex="-1">应用服务：使能应用提供便捷用户体验，助力经营和商业闭环 <a class="header-anchor" href="#应用服务-使能应用提供便捷用户体验-助力经营和商业闭环" aria-label="Permalink to &quot;应用服务：使能应用提供便捷用户体验，助力经营和商业闭环&quot;">​</a></h4><p>应用服务开放能力提供从开发上架到变现运营能力，覆盖应用的整个生命周期。</p><ul><li>Account Kit、Game Service Kit提供华为帐号相关的个人信息、实名、游戏等数据</li><li>Location Kit、Map Kit、Contacts Kit等服务则帮助实现各种业务场景功能</li><li>Ads Kit、IAP Kit和Payment Kit让应用实现商业闭环</li><li>Analytics Kit等服务通过全面的运营数据改善经营</li><li>Push Kit、Notification Kit、Live View Kit等服务则更好地触达用户</li></ul><h4 id="系统-助力构建纯净安全、稳定快速的harmonyos应用" tabindex="-1">系统：助力构建纯净安全、稳定快速的HarmonyOS应用 <a class="header-anchor" href="#系统-助力构建纯净安全、稳定快速的harmonyos应用" aria-label="Permalink to &quot;系统：助力构建纯净安全、稳定快速的HarmonyOS应用&quot;">​</a></h4><p>系统领域，为HarmonyOS应用构筑安全、流畅、全场景协同的可靠能力底座。</p><ul><li>提供强大的身份验证、密钥管理、证书服务和安全环境检测等能力，助力开发者实现可信开发执行和应用安全管理，保护用户数据</li><li>提供丰富的通信服务开放能力和全面的设备发现、连接和管理能力，实现更多HarmonyOS硬件设备更快连接、更广覆盖</li><li>提供多样化的系统基础服务，让应用更快响应，为用户打造简单易用的多端互联服务</li><li>提供高效的测试和问题定位工具，帮助应用敏捷开发、快速迭代</li></ul><h4 id="媒体-助力harmonyos应用打造超清、流畅、高能效的音视频体验" tabindex="-1">媒体：助力HarmonyOS应用打造超清、流畅、高能效的音视频体验 <a class="header-anchor" href="#媒体-助力harmonyos应用打造超清、流畅、高能效的音视频体验" aria-label="Permalink to &quot;媒体：助力HarmonyOS应用打造超清、流畅、高能效的音视频体验&quot;">​</a></h4><p>媒体开放能力，作为HarmonyOS能力底座，基于“软、硬、芯”协同、编解码硬件加速、轻量级播放引擎、统一场景化接口等，为开发者提供应用快速构建音视频相关业务能力，助力鸿蒙生态应用打造超清、流畅、高能效的音视频体验。</p><p>媒体领域主要提供用户视觉、听觉信息的处理能力，包括音视频和相机图像信息的采集、压缩存储、解压播放等，为影音娱乐类、视频制作类、音视频通话类等业务领域应用提供基础媒体能力，为开发者提供鸿蒙生态媒体领域的全场景解决方案。</p><h4 id="图形-提供丰富的图形游戏开放能力-使能应用高流畅-高画质-低功耗" tabindex="-1">图形：提供丰富的图形游戏开放能力，使能应用高流畅，高画质，低功耗 <a class="header-anchor" href="#图形-提供丰富的图形游戏开放能力-使能应用高流畅-高画质-低功耗" aria-label="Permalink to &quot;图形：提供丰富的图形游戏开放能力，使能应用高流畅，高画质，低功耗&quot;">​</a></h4><p>图形游戏开放能力，充分发挥华为已有硬件的渲染能力，包括2D、3D渲染，针对游戏场景的插桢、超分、场景化渲染以及GPU硬件的原子化接口，同时还有面向AR、VR场景的运动跟踪，人体识别等丰富能力，助力开发者实现高画质、高流畅、低功耗的图形及游戏体验。</p><h4 id="ai开放能力-分层开放-各类场景皆可原生智能" tabindex="-1">AI开放能力：分层开放，各类场景皆可原生智能 <a class="header-anchor" href="#ai开放能力-分层开放-各类场景皆可原生智能" aria-label="Permalink to &quot;AI开放能力：分层开放，各类场景皆可原生智能&quot;">​</a></h4><p>AI领域提供了分层的开放能力，满足不同开发者的诉求。</p><p>首先，从底层硬件加速和推理框架出发，利用先进的技术手段，实现了高效的计算能力和强大的处理性能。</p><p>其次，在中间层提供了丰富的API，涵盖了语音、图像和自然语言处理等多个领域，助力开发者快速实现各种复杂的场景功能。</p><p>最后，在上层提供了控件化的能力，助力开发者更加便捷地开发出各种创新的应用。</p><h3 id="应用测试" tabindex="-1">应用测试 <a class="header-anchor" href="#应用测试" aria-label="Permalink to &quot;应用测试&quot;">​</a></h3><h4 id="测试标准导读" tabindex="-1">测试标准导读 <a class="header-anchor" href="#测试标准导读" aria-label="Permalink to &quot;测试标准导读&quot;">​</a></h4><p>定义HarmonyOS应用及元服务兼容性、稳定性、性能、功耗、安全、UX测试标准和全场景分布式流转测试标准，覆盖HarmonyOS应用、元服务、全场景分布式应用接续等HarmonyOS关键特征，帮助开发者解决测什么的问题。</p><p><strong>表1</strong> 测试标准简介和相关资源获取方式</p><table tabindex="0"><thead><tr><th style="text-align:left;">测试标准名称</th><th style="text-align:left;">简介</th><th style="text-align:left;">相关资源</th></tr></thead><tbody><tr><td style="text-align:left;">兼容性测试</td><td style="text-align:left;">应用与OS兼容、应用与设备兼容、应用升级兼容等</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-compatibilitytest-0000001082683302" target="_blank" rel="noreferrer">兼容性测试</a></td></tr><tr><td style="text-align:left;">稳定性测试</td><td style="text-align:left;">长时间运行故障率（崩溃、冻屏等）、长时间运行内存资源异常</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-stabilitytest-0000001082842916" target="_blank" rel="noreferrer">稳定性测试</a></td></tr><tr><td style="text-align:left;">性能测试</td><td style="text-align:left;">时延、帧率流畅体验和内存占用、CPU占用、<br>线程数等资源占用约束</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-performancetest-0000001083034800" target="_blank" rel="noreferrer">性能测试</a></td></tr><tr><td style="text-align:left;">功耗测试</td><td style="text-align:left;">后台任务使用、后台硬件器件资源/软件系统资源占用管控，<br>分布式资源占用等</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-powerconsumptiontest-0000001129899565" target="_blank" rel="noreferrer">功耗测试</a></td></tr><tr><td style="text-align:left;">安全测试</td><td style="text-align:left;">基础安全、恶意软件、应用安全、隐私合规等</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-securitytest-0000001325552270" target="_blank" rel="noreferrer">安全测试</a></td></tr><tr><td style="text-align:left;">UX测试</td><td style="text-align:left;">设计规范、设计约束的符合性，UX精致体验要求等</td><td style="text-align:left;"><a href="https://developer.huawei.com/consumer/cn/doc/AppGallery-connect-Guides/agc-cloudtest-uxtest-0000001452514781" target="_blank" rel="noreferrer">UX测试</a></td></tr></tbody></table><h4 id="测试工具服务导读" tabindex="-1">测试工具服务导读 <a class="header-anchor" href="#测试工具服务导读" aria-label="Permalink to &quot;测试工具服务导读&quot;">​</a></h4><p>提供HarmonyOS应用和元服务开发、调试、单元测试、集成测试、上架预测试等各阶段开发活动所需的测试工具和测试服务平台，帮助开发者全面高效测试。</p><h3 id="harmonyos应用-元服务上架" tabindex="-1">HarmonyOS应用/元服务上架 <a class="header-anchor" href="#harmonyos应用-元服务上架" aria-label="Permalink to &quot;HarmonyOS应用/元服务上架&quot;">​</a></h3><p><a href="https://developer.huawei.com/consumer/cn/training/course/slightMooc/C101705111830082071" target="_blank" rel="noreferrer">官方文档-应用/元服务上架</a></p><h4 id="申请发布证书" tabindex="-1">申请发布证书 <a class="header-anchor" href="#申请发布证书" aria-label="Permalink to &quot;申请发布证书&quot;">​</a></h4><h5 id="_1-选取证书请求文件-csr-证书请求文件需要在deveco-studio上申请-具体操作请参考生成证书请求文件。" tabindex="-1">1. 选取证书请求文件（CSR）：证书请求文件需要在DevEco Studio上申请，具体操作请参考<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ide-signing-0000001587684945-V5#section462703710326" target="_blank" rel="noreferrer">生成证书请求文件</a>。 <a class="header-anchor" href="#_1-选取证书请求文件-csr-证书请求文件需要在deveco-studio上申请-具体操作请参考生成证书请求文件。" aria-label="Permalink to &quot;1. 选取证书请求文件（CSR）：证书请求文件需要在DevEco Studio上申请，具体操作请参考[生成证书请求文件](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ide-signing-0000001587684945-V5#section462703710326)。&quot;">​</a></h5><p><strong>生成密钥和证书请求文件</strong></p><ol><li>在主菜单栏单击<strong>Build &gt; Generate Key</strong> <strong>and CSR</strong>。</li></ol><blockquote><p>如果本地已有对应的密钥，无需新生成密钥，可以在<strong>Generate Key</strong>界面中单击下方的Skip跳过密钥生成过程，直接使用已有密钥生成证书请求文件。</p></blockquote><ol start="2"><li><p>在<strong>Key Store File</strong>中，可以单击<strong>Choose Existing</strong>选择已有的密钥库文件（存储有密钥的.p12文件）；如果没有密钥库文件，单击<strong>New</strong>进行创建。下面以新创建密钥库文件为例进行说明。</p></li><li><p>在<strong>Create Key Store</strong>窗口中，填写密钥库信息后，单击<strong>OK</strong>。</p><ul><li><strong>Key store file</strong>：设置密钥库文件存储路径，并填写p12文件名。</li><li><strong>Password</strong>：设置密钥库密码，必须由大写字母、小写字母、数字和特殊符号中的两种以上字符的组合，长度至少为8位。请记住该密码，后续签名配置需要使用。</li><li><strong>Confirm password</strong>：再次输入密钥库密码。</li></ul></li><li><p>在<strong>Generate Key</strong> <strong>and CSR</strong>界面中，继续填写密钥信息后，单击<strong>Next</strong>。</p><ul><li><strong>Alias</strong>：密钥的别名信息，用于标识密钥名称。请记住该别名，后续签名配置需要使用。</li><li><strong>Password</strong>：密钥对应的密码，与密钥库密码保持一致，无需手动输入。</li></ul></li><li><p>在<strong>Generate Key</strong> <strong>and CSR</strong>界面，设置CSR文件存储路径和CSR文件名。</p></li><li><p>单击<strong>Finish</strong>，创建CSR文件成功，可以在存储路径下获取生成的密钥库文件（.p12）、证书请求文件（.csr）和material文件夹。</p></li></ol><h4 id="申请发布profile" tabindex="-1">申请发布Profile <a class="header-anchor" href="#申请发布profile" aria-label="Permalink to &quot;申请发布Profile&quot;">​</a></h4><p>Profile格式为.p7b，包含<strong>HarmonyOS应用/元服务的包名、数字证书信息、HarmonyOS应用/元服务允许申请的证书权限列表</strong>，以及允许应用/元服务调试的设备列表（如果应用/元服务类型为Release类型，则设备列表为空）等内容。每个HarmonyOS应用/元服务包中均<strong>必须包含一个Profile文件</strong>。</p><p>Profile文件分为调试Profile和发布Profile两种。</p><p>申请发布Profile步骤如下：</p><ol><li>登录<a href="https://developer.huawei.com/consumer/cn/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect</a>，选择**“<strong>证书、APP ID和Profile</strong>”**。</li><li>在左侧导航栏选择“证书、APP ID和Profile &gt; Profile”，进入“Profile”页面，点击右上角“添加”。</li><li>在“添加Profile”页面，填写Profile信息，完成后点击“添加”。</li></ol><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">应用名称</td><td style="text-align:left;">选择需要申请发布Profile的应用名称。如尚未新建应用，请先<a href="https://developer.huawei.com/consumer/cn/doc/app/agc-help-createharmonyapp-0000001945392297" target="_blank" rel="noreferrer">前往“APP ID”菜单创建应用</a>。</td></tr><tr><td style="text-align:left;">包名</td><td style="text-align:left;">选择应用名称后自动填充。</td></tr><tr><td style="text-align:left;">Profile名称</td><td style="text-align:left;">不超过100个字符。</td></tr><tr><td style="text-align:left;">类型</td><td style="text-align:left;">选择“发布”。</td></tr><tr><td style="text-align:left;">选择证书</td><td style="text-align:left;">点击“选择”，选择<a href="https://developer.huawei.com/consumer/cn/doc/app/agc-help-add-releasecert-0000001946273961" target="_blank" rel="noreferrer">申请的发布证书</a>。</td></tr><tr><td style="text-align:left;">申请限</td><td style="text-align:left;">若应用/元服务因特殊场景要求使用受限开放权限，请您务必在此处进行申请，否则您的应用/元服务将在审核时被驳回。<br><br>受限开放权限仅在应用/元服务内实现特殊场景与功能下可以使用，具体可参见<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/restricted-permissions-V5" target="_blank" rel="noreferrer">受限开放权限</a>内关于可申请此权限的特殊场景与功能的说明。<br><br>- API9以下<br> <br> 仅支持申请ohos.permission.READ_CONTACTS与ohos.permission.WRITE_CONTACTS权限。选择“受限权限（HarmonyOS API9以下）”，根据需要勾选即可。<br> <br>- API9及以上<br> <br> 需要提供<a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-help-appinfo-0000001100014694" target="_blank" rel="noreferrer">APP ID</a>、申请使用的受限开放权限、使用该权限的场景和功能信息，发送至agconnect@huawei.com。AGC运营将审核相关材料，通过后将为您配置受限开放权限使用的名单，审核周期为1个工作日，请耐心等待。<br> <br> 审核通过后，选择“受限ACL权限（HarmonyOS API9及以上）”，在此配置项中勾选您申请的受限开放权限即可。选择权限时，请注意各权限支持的设备类型，确保软件包声明的设备类型范围不超出申请的权限支持的设备类型范围，否则将导致传包失败。<br> <br><br>注意<br><br>请确保应用/元服务申请受限开放权限时提供的场景和功能信息准确。<br><br>如果应用/元服务内使用的受限开放权限超出您申请的范围，或申请权限后使用的功能和场景超出可使用的范围，将影响您的应用上架。</td></tr></tbody></table><ol start="4"><li>发布Profile申请成功后，“Profiles”页面展示Profile名称、类型等信息。点击“下载”，将生成的Profile保存至本地，供后续发布签名使用。</li></ol><h4 id="发布harmonyos应用" tabindex="-1">发布HarmonyOS应用 <a class="header-anchor" href="#发布harmonyos应用" aria-label="Permalink to &quot;发布HarmonyOS应用&quot;">​</a></h4><p>完成HarmonyOS应用开发、调试与测试后，您便可以在AGC正式提交应用上架申请。HarmonyOS应用审核通过上架后，用户可在华为应用市场搜索到您的HarmonyOS应用。</p><h5 id="配置应用信息" tabindex="-1">配置应用信息 <a class="header-anchor" href="#配置应用信息" aria-label="Permalink to &quot;配置应用信息&quot;">​</a></h5><p>应用基本信息包含应用的兼容设备、应用在华为应用市场详情页展示的应用名称、应用介绍、应用图标、应用截图、介绍视频等，在发布应用前您需要将应用基本信息补充完整。在应用信息填写过程中，您可随时点击右上角的“保存”，保存已配置的应用信息。</p><h5 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-label="Permalink to &quot;前提条件&quot;">​</a></h5><ul><li>您的应用必须满足华为应用市场的审核要求，具体请参见<a href="https://developer.huawei.com/consumer/cn/doc/app/50104-overview" target="_blank" rel="noreferrer">应用审核指南</a>。如果您的应用是联运应用，还需满足联运服务要求，具体请参见<a href="https://developer.huawei.com/consumer/cn/doc/distribution/promotion/access-guide-0000001063305339#section121848397366" target="_blank" rel="noreferrer">联运服务上架前Checklist</a>。</li><li>您已使用<a href="https://developer.huawei.com/consumer/cn/doc/app/agc-help-add-releasecert-0000001946273961" target="_blank" rel="noreferrer">发布证书</a>与<a href="https://developer.huawei.com/consumer/cn/doc/app/agc-help-add-releaseprofile-0000001914714796" target="_blank" rel="noreferrer">发布Profile</a>在DevEco Studio<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ide-publish-app-0000001053223745-V5#section280162182818" target="_blank" rel="noreferrer">配置了工程的签名信息</a>，并<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/ide-publish-app-0000001053223745-V5#section1992513343374" target="_blank" rel="noreferrer">构建了携带发布签名信息的APP</a>。</li></ul><h5 id="选择待发布应用" tabindex="-1">选择待发布应用 <a class="header-anchor" href="#选择待发布应用" aria-label="Permalink to &quot;选择待发布应用&quot;">​</a></h5><p>首先需要选择待发布的HarmonyOS应用。完成选择之后，应用才会展示在“我的应用”列表内。</p><h5 id="上传软件包" tabindex="-1">上传软件包 <a class="header-anchor" href="#上传软件包" aria-label="Permalink to &quot;上传软件包&quot;">​</a></h5><p>应用信息填写完成后，您可开始上传软件包。AGC会对上传的软件包执行基础合法检测，检测通过的包才能在发布版本时被选取到。</p><h5 id="配置版本信息" tabindex="-1">配置版本信息 <a class="header-anchor" href="#配置版本信息" aria-label="Permalink to &quot;配置版本信息&quot;">​</a></h5><p>接下来，您便可以配置发布国家或地区、备案信息、版权信息等版本信息，正式将应用提交AGC审核。</p>`,164),h=[l];function e(p,k,r,E,d,g){return a(),i("div",null,h)}const c=s(t,[["render",e]]);export{y as __pageData,c as default};
