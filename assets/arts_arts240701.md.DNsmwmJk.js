import{_ as i,c as a,o as t,ai as n}from"./chunks/framework.CidjA1rH.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"arts/arts240701.md","filePath":"arts/arts240701.md","lastUpdated":1756656444000}'),h={name:"arts/arts240701.md"};function l(e,s,k,p,r,o){return t(),a("div",null,[...s[0]||(s[0]=[n(`<blockquote><p>2024/7/8日~2024/7/12</p></blockquote><h2 id="algorithm-算法" tabindex="-1">Algorithm 算法 <a class="header-anchor" href="#algorithm-算法" aria-label="Permalink to &quot;Algorithm 算法&quot;">​</a></h2><p>每周至少做一个 Leetcode 的算法题。 <strong>( 30-60 minutes )</strong></p><h3 id="求一个整数num的-k-美丽值" tabindex="-1">求一个整数num的 <strong>k</strong> 美丽值 <a class="header-anchor" href="#求一个整数num的-k-美丽值" aria-label="Permalink to &quot;求一个整数num的 **k** 美丽值&quot;">​</a></h3><p>定义为 <code>num</code> 中符合以下条件的 <strong>子字符串</strong> 数目：</p><ul><li>子字符串长度为 <code>k</code> 。</li><li>子字符串能整除 <code>num</code> 。 给你整数 <code>num</code> 和 <code>k</code> ，请你返回 <code>num</code> 的 k 美丽值。</li></ul><p>注意：</p><ul><li>允许有 <strong>前缀</strong> <strong>0</strong> 。</li><li><code>0</code> 不能整除任何值。 一个 <strong>子字符串</strong> 是一个字符串里的连续一段字符序列。</li></ul><p><strong>示例 1：</strong><strong>输入：</strong> num = 240, k = 2 <strong>输出：</strong> 2 <strong>解释：</strong> 以下是 num 里长度为 k 的子字符串：</p><ul><li>&quot;_<strong>24</strong>_0&quot; 中的 &quot;24&quot; ：24 能整除 240 。</li><li>&quot;2_<strong>40</strong>_&quot; 中的 &quot;40&quot; ：40 能整除 240 。 所以，k 美丽值为 2 。</li></ul><p><strong>示例 2：</strong><strong>输入：</strong> num = 430043, k = 2 <strong>输出：</strong> 2 <strong>解释：</strong> 以下是 num 里长度为 k 的子字符串：</p><ul><li>&quot;_<strong>43</strong>_0043&quot; 中的 &quot;43&quot; ：43 能整除 430043 。</li><li>&quot;4_<strong>30</strong>_043&quot; 中的 &quot;30&quot; ：30 不能整除 430043 。</li><li>&quot;43_<strong>00</strong>_43&quot; 中的 &quot;00&quot; ：0 不能整除 430043 。</li><li>&quot;430_<strong>04</strong>_3&quot; 中的 &quot;04&quot; ：4 不能整除 430043 。</li><li>&quot;4300_<strong>43</strong>_&quot; 中的 &quot;43&quot; ：43 能整除 430043 。 所以，k 美丽值为 2 。</li></ul><h4 id="解法" tabindex="-1">解法 <a class="header-anchor" href="#解法" aria-label="Permalink to &quot;解法&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> divisorSubstrings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kNum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(numStr.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numStr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">substring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i,i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">k);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) kNum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kNum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="review-阅读英语文章" tabindex="-1">Review 阅读英语文章 <a class="header-anchor" href="#review-阅读英语文章" aria-label="Permalink to &quot;Review   阅读英语文章&quot;">​</a></h2><p>阅读并点评至少一篇英文技术文章 <strong>( 30 minutes )</strong></p><blockquote><p>Last year Americans bought 5.8m guidebooks and maps—down from 6.9m before the pandemic, but up from 4m in 2020.</p></blockquote><p>上一年美国消费者购买了580万本旅游指南和地图，虽然低于疫情前的690万册，但是比起2020年的400万册有所回升。</p><blockquote><p>Another is that guidebooks have changed with the times.</p></blockquote><p>另一个是旅游指南也在与时俱进。</p><blockquote><p>sales of such guides for domestic destinations were down by 49% and by 20% for overseas ones.</p></blockquote><p>旅游指南的销售数据国内、国际分别下降49%、20%</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stand out  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 脱颖而出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tailor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">made  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 量身定制  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tailor   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// n. 裁缝  vt. 定做</span></span></code></pre></div><blockquote><p>This means that you end up learning small tips and tricks here and there, and never learn the underlying layout algorithm.</p></blockquote><p>这意味着你最终会在这或是那儿学习到一些小技巧和窍门，而永远不会学习底层布局算法。</p><blockquote><p>somewhere people can gather without a purpose</p></blockquote><p>一个人们可以漫无目的聚集的地方。</p><h2 id="tips-学习技术技巧" tabindex="-1">Tips 学习技术技巧 <a class="header-anchor" href="#tips-学习技术技巧" aria-label="Permalink to &quot;Tips 学习技术技巧&quot;">​</a></h2><p>学习至少一个技术技巧。 <strong>( 10 minutes )</strong> 主要是为了总结和归纳你在日常工作中所遇到的知识点。</p><h2 id="share-分享思考文章" tabindex="-1">Share 分享思考文章 <a class="header-anchor" href="#share-分享思考文章" aria-label="Permalink to &quot;Share  分享思考文章&quot;">​</a></h2><p>分享一篇有观点和思考的技术文章。 <strong>( 30~60 minutes )</strong> 思考一个技术观点、社会热点、一个产品或是一个困惑</p>`,31)])])}const E=i(h,[["render",l]]);export{g as __pageData,E as default};
