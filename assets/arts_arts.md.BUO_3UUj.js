import{_ as e,c as a,o as t,a5 as r}from"./chunks/framework.6Vkfk6hO.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"arts/arts.md","filePath":"arts/arts.md","lastUpdated":1722352773000}'),i={name:"arts/arts.md"},o=r('<h2 id="arts" tabindex="-1">ARTS <a class="header-anchor" href="#arts" aria-label="Permalink to &quot;ARTS&quot;">​</a></h2><p>什么是 ARTS 打卡计划?《左耳听风》专栏用户加入社群后，必须承诺，每周自发完成一个 ARTS:</p><h3 id="algorithm" tabindex="-1">Algorithm <a class="header-anchor" href="#algorithm" aria-label="Permalink to &quot;Algorithm&quot;">​</a></h3><p>每周至少做一个 Leetcode 的算法题。主要是为了编程训练和学习。如果不训练你看再多的算法书你依然不会做算法题。关于做 Leetcode 的优势你可以看一下我在 coolshell 上的文章。</p><h3 id="review" tabindex="-1">Review <a class="header-anchor" href="#review" aria-label="Permalink to &quot;Review&quot;">​</a></h3><p>阅读并点评至少一篇英文技术文章。主要是为了学习英文， 如果你的英文不行，你基本上无缘技术高手;我个人最喜欢去的地方是 <a href="http://Medium.com" target="_blank" rel="noreferrer">http://Medium.com</a>(需要梯子)以及各个公司的技术 blog，如 Netflix 的。</p><h3 id="tip" tabindex="-1">Tip <a class="header-anchor" href="#tip" aria-label="Permalink to &quot;Tip&quot;">​</a></h3><p>学习至少一个技术技巧。主要是为了总结和归纳你在日常工作中所遇到的知识点。</p><h3 id="share" tabindex="-1">Share <a class="header-anchor" href="#share" aria-label="Permalink to &quot;Share&quot;">​</a></h3><p>分享一篇有观点和思考的技术文章。主要是为了建立你的影响力，能够输出价值观。</p><h2 id="arts-打卡计划规划" tabindex="-1">ARTS 打卡计划规划 <a class="header-anchor" href="#arts-打卡计划规划" aria-label="Permalink to &quot;ARTS 打卡计划规划&quot;">​</a></h2><ul><li>Algorithm 部分：记得决定转行前端那会儿，主要是通过 W3Cschool 完成<a href="https://www.w3cschool.cn/codecamp" target="_blank" rel="noreferrer">FreeCodeCamp 挑战</a>来找回编程的感觉，开始用 LeetCode 也是去年底的时候了，借着此次 ARTS 打卡计划，可以更多的完成相关算法题目；</li><li>Review 部分：最头疼的部分了，还是要努力去克服下，主要通过<a href="https://www.infoq.com/" target="_blank" rel="noreferrer">InfoQ</a>、<a href="https://medium.com/" target="_blank" rel="noreferrer">Medium</a>等渠道吧；</li><li>Tip 部分：主要还是按照以前的规划，以<a href="https://time.geekbang.org/" target="_blank" rel="noreferrer">极客时间专栏</a>为主，同步更新<a href="https://king-hcj.github.io/2019/12/22/front-end-engineer/" target="_blank" rel="noreferrer">前端学习之路【学习途径、资料、书籍等】</a>；也会积累一些工作、阅读中的收获；</li><li>Share 部分：争取每月能有一到两篇技术总结，主要集中于本博客中，外发地址，可能还是和以前一样，以个人<a href="https://segmentfault.com/u/king_hcj/articles" target="_blank" rel="noreferrer">SegmentFault 思否</a>专栏为主；</li></ul><p>来自耗子叔的建议：</p><div class="language-undefined vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">undefined</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>完成一个 ARTS 的时间不要超过 5 个小时，尽题控制在 2-3 个小时以内，少了你投入不够，多了难以坚持。这 2-3 个小时的时间分配是，算法题 30-60 分钟，英文文章 30 分钟，Tip 回想一下本周工作中学到的一个小技巧（10 分钟），Share 思考一个技术观点、社会热点、一个产品或是一个困惑（这个时间应该放在日常），然后花 30-60 分钟写下来。</span></span></code></pre></div>',14),l=[o];function n(s,h,c,d,p,m){return t(),a("div",null,l)}const u=e(i,[["render",n]]);export{_ as __pageData,u as default};
